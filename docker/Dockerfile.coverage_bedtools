# To build: docker build -t bedtools:v0.1 - < Dockerfile.coverage_bedtools

FROM debian:buster

ENV pengu_software_version_bedtools=2.29.2 \
pengu_software_version_python=3.6.10 \
pengu_software_version_htslib=1.10.2 \
pengu_software_version_samtools=1.10

RUN apt-get update && apt-get install -y bzip2 curl g++ make libz-dev libbz2-dev liblzma-dev \
libncurses5-dev

# Install python (executables for old CLI part of build is dependent on)
RUN curl -fsSL "https://www.python.org/ftp/python/${pengu_software_version_python}/Python-${pengu_software_version_python}.tgz" | tar -xz
WORKDIR /Python-${pengu_software_version_python}
RUN ./configure && make && make install
ENV PATH "$PATH:/Python-${pengu_software_version_python}"

# Install bedtools
WORKDIR /
RUN curl -fsSL "https://github.com/arq5x/bedtools2/releases/download/v${pengu_software_version_bedtools}/bedtools-${pengu_software_version_bedtools}.tar.gz" | tar -xz
RUN cd bedtools2 && make
RUN ls
ENV PATH "$PATH:/bedtools2/bin"

# Install htslib
WORKDIR /
RUN curl -fsSL "https://github.com/samtools/htslib/releases/download/${pengu_software_version_htslib}/htslib-${pengu_software_version_htslib}.tar.bz2" | tar -xj
WORKDIR htslib-${pengu_software_version_htslib}
RUN ./configure && make && make install
ENV PATH "$PATH:/htslib-${pengu_software_version_htslib}"
RUN ln -s /usr/local/lib/libhts.so.3 /usr/lib/

# Install samtools
WORKDIR /
RUN curl -fsSL "https://github.com/samtools/samtools/releases/download/${pengu_software_version_samtools}/samtools-${pengu_software_version_samtools}.tar.bz2" | tar -xj
WORKDIR samtools-${pengu_software_version_samtools}
RUN ./configure && make && make install
ENV PATH "$PATH:/samtools-${pengu_software_version_samtools}"

WORKDIR /



