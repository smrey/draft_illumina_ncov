# To build: docker build -t varscan_variants:v0.1 - < Dockerfile.callVariants_varscan

FROM debian:buster

ENV pengu_software_version_htslib=1.10.2 \
pengu_software_version_samtools=1.10 \ 
pengu_software_version_varscan=2.4.2 

RUN apt-get update && apt-get install -y bzip2 curl g++ make libz-dev zlib1g-dev libbz2-dev liblzma-dev \
libncurses5-dev default-jdk 

# Install samtools- required for variant calling
# Install HTSlib
RUN curl -fsSL "https://github.com/samtools/htslib/releases/download/${pengu_software_version_htslib}/htslib-${pengu_software_version_htslib}.tar.bz2" | tar -xj
WORKDIR htslib-${pengu_software_version_htslib}
RUN ./configure && make && make install
ENV PATH "$PATH:/htslib-${pengu_software_version_htslib}"
RUN ln -s /usr/local/lib/libhts.so.3 /usr/lib/

# Install samtools
WORKDIR /
RUN curl -fsSL "https://github.com/samtools/samtools/releases/download/${pengu_software_version_samtools}/samtools-${pengu_software_version_samtools}.tar.bz2" | tar -xj
WORKDIR samtools-${pengu_software_version_samtools}
RUN ./configure && make && make install
ENV PATH "$PATH:/samtools-${pengu_software_version_samtools}"

WORKDIR /
RUN mkdir VarScan2
WORKDIR VarScan2
RUN curl -fsSL "https://github.com/dkoboldt/varscan/releases/download/${pengu_software_version_varscan}/VarScan.v${pengu_software_version_varscan}.jar" \
--output VarScan.jar
ENV PATH "$PATH:/VarScan2"

# Create call to varscan for PATH
# Make file on the fly
RUN printf '%s\n' \
'#!/usr/bin/env bash' \
'java -jar /VarScan2/VarScan.jar "$@"' \
> varscan

RUN chmod +x varscan

ENV PATH "$PATH:/VarScan2"

ENTRYPOINT ["java", "-jar", "VarScan2/VarScan.jar"]
