# To build: docker build -t biopython:v0.1 - < Dockerfile.coverageRefSites_python

FROM debian:buster

ENV pengu_software_version_python=3.6.10 \
pengu_software_version_pyvcf=0.6.8 \
pengu_software_version_biopython=1.68 \
pengu_software_version_pandas=1.0.3 \
pengu_software_version_htslib=1.10.2 \
pengu_software_version_samtools=1.10


RUN apt-get update && apt-get install -y bzip2 curl g++ make  \
    libbz2-dev libc6-dev libdb-dev libexpat1-dev libhdf5-dev libffi-dev \
    libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev liblzma-dev libtinfo-dev \
    libcairo2-dev libjpeg62-turbo-dev libpango1.0-dev libgif-dev libgirepository1.0-dev

# Install pengu_software_version_python
RUN curl -fsSL "https://www.python.org/ftp/python/${pengu_software_version_python}/Python-${pengu_software_version_python}.tgz" | tar -xz
WORKDIR /Python-${pengu_software_version_python}
RUN ./configure && make && make install

# Make requirements file on the fly (copy didn't work under certain conditions (contextless build) and was concerned about compatibility with Singularity- may need to change later)
RUN printf '%s\n' \
pyvcf==${pengu_software_version_pyvcf} \
biopython==${pengu_software_version_biopython} \
pandas==${pengu_software_version_pandas} \
> requirements.txt

# install python modules
RUN pip3 install -r requirements.txt

ENV PATH "$PATH:/Python-${pengu_software_version_python}"

# Install bcftools
# Install htslib
WORKDIR /
RUN curl -fsSL "https://github.com/samtools/htslib/releases/download/${pengu_software_version_htslib}/htslib-${pengu_software_version_htslib}.tar.bz2" | tar -xj
WORKDIR htslib-${pengu_software_version_htslib}
RUN ./configure && make && make install
ENV PATH "$PATH:/htslib-${pengu_software_version_htslib}"
RUN ln -s /usr/local/lib/libhts.so.3 /usr/lib/

# Install samtools
WORKDIR /
RUN curl -fsSL "https://github.com/samtools/samtools/releases/download/${pengu_software_version_samtools}/samtools-${pengu_software_version_samtools}.tar.bz2" | tar -xj
WORKDIR samtools-${pengu_software_version_samtools}
RUN ./configure && make && make install
ENV PATH "$PATH:/samtools-${pengu_software_version_samtools}"
