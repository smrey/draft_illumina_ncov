# To build: docker build -t lofreq_variants:v0.1 - < Dockerfile.callVariants_lofreq

FROM debian:buster

ENV pengu_software_version_htslib=1.10.2 \
pengu_software_version_python=3.7.7 \
pengu_software_version_lofreq=2.1.4

RUN apt-get update && apt-get install -y bzip2 curl g++ make automake libz-dev zlib1g-dev libbz2-dev liblzma-dev

# Install HTSlib
RUN curl -fsSL "https://github.com/samtools/htslib/releases/download/${pengu_software_version_htslib}/htslib-${pengu_software_version_htslib}.tar.bz2" | tar -xj
WORKDIR htslib-${pengu_software_version_htslib}
RUN ./configure && make && make install
ENV PATH "$PATH:/htslib-${pengu_software_version_htslib}"
RUN ln -s /usr/local/lib/libhts.so.3 /usr/lib/

# Install python
WORKDIR /
RUN curl -fsSL "https://www.python.org/ftp/python/${pengu_software_version_python}/Python-${pengu_software_version_python}.tgz" | tar -xz
WORKDIR /Python-${pengu_software_version_python}
RUN ./configure && make && make install
ENV PATH "$PATH:/Python-${pengu_software_version_python}"

# Install lofreq
WORKDIR /
RUN curl -fsSL https://github.com/CSB5/lofreq/archive/v${pengu_software_version_lofreq}.tar.gz | tar -xz
WORKDIR lofreq-${pengu_software_version_lofreq}
RUN ls
RUN ./bootstrap && ./configure && make && make install
